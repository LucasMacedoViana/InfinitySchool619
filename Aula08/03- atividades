'''
#classe
class Aluno:
    #constructos
    def __init__(self, matricula, nome, curso):
        self.nome = nome
        self.matricula = matricula
        self.curso = curso
        print('constructor iniciado')
    def exibirDados(self):
        print(f'Nome do aluno: {self.nome}')
        print(f'Matricula do alunos{self.matricula}')
        print(f'Curso do aluno: {self.curso}')

# nome do objeto = nome_da_classe (-parametros-)

a1 = Aluno(1, 'Roberto', 'fotografia')
a2 = Aluno(2, 'Gabriela', 'Metaverso')

a1.exibirDados()
a2.exibirDados()



class Elevador:
    def __init__(self, qtdAndares, andar, pessoas, capacidade):
        self.qtdAndares = qtdAndares
        self.andar = andar
        self.pessoas = pessoas
        self.capacidade = capacidade

    def subir(self):
        self.andar +=1
        if self.andar == 0:
            print('Você está no terreo')
        else:
            print(f'andar atual é {self.andar}')
        return ''

    def descer(self):
        self.andar -=1
        if self.andar == 0:
            print('Você está no terreo')
        print(f'Oandar atual é {self.andar}')
        return ''

    def entrar(self, qtd_pessoas):
        if qtd_pessoas + self.pessoas > self.capacidade:
            print(f'Capacidade máxima atingida')
        else:
            self.pessoas += qtd_pessoas
            print(f'Quandtidade de pessoas no elevador{self.pessoas}')
        return ''

    def sair(self, qtd_pessoas):
        if self.pessoas == 0:
            print(f'Não tem ninguem no elevador')
        else:
            self.pessoas -= qtd_pessoas
            print(f'Quandtidade de pessoas no elevador{self.pessoas}')
        return ''

e1 = Elevador(20,0,10,20)

print(e1.sair(5))


class ContaBancaria:
    def __init__(self, titular, conta):
        self.titular = titular
        self.conta = conta
        self.saldo = 0

    def setSaldo(self, valor):
        if valor < 0:
            print(f'Você não pode atribuir essa valor ao saldo!!')
        else:
            self.saldo = valor
    def getSaldo(self):
        return self.saldo


class Pessoa:
    def __init__(self):
        self.__nome = ''
        self.__idade = ''
        self.__cpf = 0
    def setNome(self, nome):
        self.__nome = nome
    def setIdade(self, idade):
        self.__idade = idade
    def setCpf(self, cpf):
        self.__cpf = cpf
    def getNome(self):
        return self.__nome
    def getIdade(self):
        return self.__idade
    def getCpf(self):
        return self.__cpf

p1 = Pessoa()
p1.setNome('macedo')
p1.setCpf('00000000000')
p1.setIdade(29)


print(f'nome: {p1.getNome()} idade: {p1.getIdade()} CPF: {p1.getCpf()}')'''


class Pessoa:
    def __init__(self):
        self.__nome = ''
        self.__idade = ''
        self.__cpf = 0
    @property
    def nome(self):
        return self.__nome
    @nome.setter
    def nome(self, nome):
        self.__nome = nome
    @property
    def idade(self):
        return self.__idade
    @idade.setter
    def idade(self,idade):
        self.__idade = idade
    @property
    def cpf(self):
        return self.__cpf
    @cpf.setter
    def cpf(self,cpf):
        self.__cpf = cpf


p1 = Pessoa()
p1.nome = input("Digite seu nome:")
p1.cpf= input("Digite seu cpf: ")
p1.idade = input("Digite sua idade: ")


print(f'nome: {p1.nome} idade: {p1.idade} CPF: {p1.cpf}')
